export default {
  "react-hooks/rules-of-hooks": "error",
  "react-hooks/exhaustive-deps": "warn",
  "react/boolean-prop-naming": [
    "error",
    {
      propTypeNames: ["bool", "mutuallyExclusiveTrueProps"],
      rule: "^(is|has)[A-Z]([A-Za-z0-9]?)+",
      message:
        "It is better if your prop ({{ propName }}) will start from 'IS' or 'HAS' prefix, example: isEnabled, hasWife",
    },
  ],
  "react/button-has-type": "error",
  "react/function-component-definition": [
    "error",
    {
      namedComponents: "arrow-function",
      unnamedComponents: "arrow-function",
    },
  ],
  "react/hook-use-state": ["error", { allowDestructuredState: true }],
  "react/jsx-boolean-value": ["error", "never"],
  "react/jsx-child-element-spacing": "error",
  "react/jsx-closing-bracket-location": "error",
  "react/jsx-closing-tag-location": "error",
  "react/jsx-curly-newline": [
    "error",
    { multiline: "require", singleline: "forbid " },
  ],
  "react/jsx-curly-spacing": "error",
  "react/jsx-equals-spacing": "error",
  "react/jsx-filename-extension": ["error", { allow: "as-needed" }],
  "react/jsx-first-prop-new-line": "error",
  "react/jsx-fragments": "warn",
  "react/jsx-indent": [
    "error",
    "tab",
    {
      checkAttributes: true,
      indentLogicalExpressions: true,
    },
  ],
  "react/jsx-indent-props": [2, "tab"],
  "react/jsx-key": [
    "error",
    {
      warnOnDuplicates: true,
    },
  ],
  "react/jsx-newline": ["error", { prevent: true, allowMultilines: true }],
  "react/jsx-no-comment-textnodes": "error",
  "react/jsx-no-duplicate-props": "error",
  "react/jsx-no-leaked-render": "error",
  "react/jsx-no-undef": "error",
  "react/jsx-no-useless-fragment": ["error", { allowExpressions: true }],
  "react/jsx-pascal-case": "error",
  "react/jsx-sort-props": [
    "error",
    { shorthandLast: true, multiline: "last", reservedFirst: true },
  ],
  "react/jsx-tag-spacing": [
    "error",
    { beforeSelfClosing: true, beforeClosing: "proportional-always" },
  ],
  "react/jsx-wrap-multilines": [
    "error",
    {
      declaration: "parens-new-line",
      assignment: "parens-new-line",
      return: "parens-new-line",
      arrow: "parens-new-line",
      condition: "parens-new-line",
      logical: "parens-new-line",
      prop: "parens-new-line",
    },
  ],
  "react/no-array-index-key": "error",
  "react/no-children-prop": "error",
  "react/no-danger-with-children": "error",
  "react/no-deprecated": "error",
  "react/no-direct-mutation-state": "error",
  "react/no-find-dom-node": "error",
  "react/no-unescaped-entities": "error",
  "react/no-unknown-property": "error",
  "react/require-render-return": "error",
  "react/self-closing-comp": "error",
  "react/void-dom-elements-no-children": "error",
};
